// Code generated by MockGen. DO NOT EDIT.
// Source: cloud.go

// Package cloud is a generated GoMock package.
package cloud

import (
	gomock "github.com/golang/mock/gomock"
	models "github.com/jphillips2121/games-api/models"
	reflect "reflect"
)

// MockCLOUD is a mock of CLOUD interface
type MockCLOUD struct {
	ctrl     *gomock.Controller
	recorder *MockCLOUDMockRecorder
}

// MockCLOUDMockRecorder is the mock recorder for MockCLOUD
type MockCLOUDMockRecorder struct {
	mock *MockCLOUD
}

// NewMockCLOUD creates a new mock instance
func NewMockCLOUD(ctrl *gomock.Controller) *MockCLOUD {
	mock := &MockCLOUD{ctrl: ctrl}
	mock.recorder = &MockCLOUDMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockCLOUD) EXPECT() *MockCLOUDMockRecorder {
	return m.recorder
}

// IsValidDeveloper mocks base method
func (m *MockCLOUD) IsValidDeveloper(game *models.Game) (bool, error) {
	ret := m.ctrl.Call(m, "IsValidDeveloper", game)
	ret0, _ := ret[0].(bool)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// IsValidDeveloper indicates an expected call of IsValidDeveloper
func (mr *MockCLOUDMockRecorder) IsValidDeveloper(game interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "IsValidDeveloper", reflect.TypeOf((*MockCLOUD)(nil).IsValidDeveloper), game)
}
